// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name

buildscript {
    repositories {
        // mavenLocal()
        mavenCentral() // maven { url 'http://jcenter.bintray.com' }
    }
    apply from: file('gradle/buildscript.gradle'), to: buildscript 
}

allprojects {
    repositories { 
        // mavenLocal()
        mavenCentral() // maven { url: 'http://jcenter.bintray.com' }
    }
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/maven.gradle')
apply from: file('gradle/check.gradle')
apply from: file('gradle/license.gradle')
// apply from: file('gradle/release.gradle')

subprojects {
    group = "org.anarres.${githubProjectName}"

    dependencies {
        compile 'com.google.code.findbugs:jsr305:2.0.2'
		compile 'commons-logging:commons-logging:1.1.1'

        testCompile 'junit:junit:4.8.1'
		testCompile 'org.easytesting:fest-swing-junit-4.5:1.2.1'
    }
}

project(':filechooser-core') {
    dependencies {
        // compile 'org.slf4j:slf4j-api:1.7.5'
		compile 'commons-io:commons-io:2.4'
    }
}

project(':filechooser-vfs') {
    dependencies {
		compile project(':filechooser-core')
		compile 'commons-vfs:commons-vfs:1.0'
		testCompile project(':filechooser-core').sourceSets.test.output
	}
}

project(':filechooser-vfs2') {
    dependencies {
		compile project(':filechooser-core')
		compile 'org.apache.commons:commons-vfs2:2.0'
		testCompile project(':filechooser-core').sourceSets.test.output
	}
}

project(':filechooser-nio') {
    dependencies {
		compile project(':filechooser-core')
		testCompile project(':filechooser-core').sourceSets.test.output
	}
}
